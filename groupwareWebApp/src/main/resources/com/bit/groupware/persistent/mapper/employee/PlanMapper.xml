<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.bit.groupware.persistent.mapper.employee.PlanMapper">

	<!-- 일정 목록 조회 -->
	<select id="selectPlanList" parameterType="map" resultType="PlanVO" >
		select 
			p.p_no as pNo,
			p.p_title as pTitle,
			p.dept_no as deptNo,
			p.p_class as pClass,
			p.p_impt as pImpt,
			p.rspb_no as rspbNo,
			p.p_content as pContent,
			p.start_date as startDate,
			p.end_date as endDate,
			p.latitude as latitude,
			p.longitude as longitude,
			e.emp_name as empName,
			c.c_name as cName
		from plan p, employee e, code c
		where p.rspb_no=e.emp_no
		and p.dept_no=c.c_no
		<choose>
			<when test="keyfield == 'p_title'  and keyword != null " >
				and p.p_title like '%' || #{keyword} || '%'
			</when>
			<when test="keyfield == 'emp_name'  and keyword != null ">
				and e.emp_name like '%' || #{keyword} || '%'
			</when>
		</choose>
	</select>
	
	<!-- 부서에 해당하는 일정 목록 조회 -->
	<select id="selectPlanListByDeptName" parameterType="map" resultType="PlanVO" >
		select 
			p.p_no as pNo,
			p.p_title as pTitle,
			p.dept_no as deptNo,
			p.p_class as pClass,
			p.p_impt as pImpt,
			p.rspb_no as rspbNo,
			p.p_content as pContent,
			p.start_date as startDate,
			p.end_date as endDate,
			p.latitude as latitude,
			p.longitude as longitude,
			e.emp_name as empName,
			c.c_name as cName
		from plan p, employee e, code c
		where p.rspb_no=e.emp_no
		and p.dept_no=c.c_no
		and (c.c_name='부서' or c.c_name=#{cName})
		<choose>
			<when test="keyfield == 'p_title'  and keyword != null " >
				and p.p_title like '%' || #{keyfield} || '%'
			</when>
			<when test="keyfield == 'emp_name'  and keyword != null ">
				and e.emp_name like '%' || #{keyword} || '%'
			</when>
		</choose>
	</select>
	
	<!-- 일정 등록 -->
	<insert id="insertPlan" parameterType="PlanVO" statementType="PREPARED">
		<selectKey keyProperty="pNo" resultType="String" statementType="STATEMENT" order="BEFORE">
			select 'p'||lpad(p_no_seq.nextval,5,0) from dual
		</selectKey>
		insert into plan(p_no,p_title,dept_no,p_class,p_impt,rspb_no,p_content,start_date,end_date,latitude,longitude)
		values ( #{pNo}, #{pTitle}, #{deptNo}, #{pClass}, #{pImpt}, #{rspbNo}, #{pContent}
					,to_date(#{startDate}, 'YYYY-MM-DD"T"HH24:mi:ss'), to_date(#{endDate}, 'YYYY-MM-DD"T"HH24:mi:ss'), #{latitude}, #{longitude})
	</insert>
	
	
	<!-- 일정번호에 해당하는 일정 상세 조회 -->
	<resultMap id="selectPlanResultMap" type="PlanVO" >
		<id column="p_no"				property="pNo" />
		<result column="p_title"			property="pTitle" />
		<result column="dept_no"		property="deptNo" />
		<result column="c_name"			property="cName" />
		<result column="p_class"			property="pClass" />
		<result column="p_impt"			property="pImpt" />
		<result column="rspb_no"		property="rspbNo" />
		<result column="emp_name"		property="empName" />
		<result column="p_content"		property="pContent" />
		<result column="start_date"		property="startDate" />
		<result column="end_date"		property="endDate" />
		<result column="latitude"			property="latitude" />
		<result column="longitude"		property="longitude" />
		<!-- 1:N 관계 -->
		<collection property="files" javaType="list" ofType="PlanFileVO">
			<id column="file_no"			property="fileNo" />
			<result column="file_name"	property="fileName" />
			<result column="system_file_name"		property="systemFileName" />
			<result column="file_size"		property="fileSize" />
		</collection>
	</resultMap>
	
	<select id="selectPlan" resultMap="selectPlanResultMap" statementType="PREPARED" parameterType="String" >
		select 
			p.p_no,
			p.p_title,
            p.dept_no,
			c1.c_name,
			p.p_class,
			p.p_impt,
			p.rspb_no,
			e.emp_name,
			p.p_content,
			<!-- to_date(p.start_date, 'YYYY-MM-DD"T"HH24:mi:ss') as start_date,
			to_date(p.end_date, 'YYYY-MM-DD"T"HH24:mi:ss') as end_date, -->
			p.start_date,
			p.end_date,
			p.latitude,
			p.longitude,
			f.file_no,
			f.file_name,
			f.system_file_name,
			f.file_size,
			f.p_no
        from plan p, plan_file f, code c1, employee e
        where p.dept_no=c1.c_no
           and p.rspb_no=e.emp_no
           and p.p_no=f.p_no(+)
           and p.p_no=#{value}
	</select>	
	
	
	<!-- 일정 번호에 해당하는 일정 수정 -->
	<update id="updatePlan" parameterType="PlanVO" statementType="PREPARED" >
		update plan
		<trim prefix="set" suffixOverrides=",">
			<if test="pNo != null" >
				p_no = #{pNo} ,
			</if>
			<if test="pTitle != null" >
				p_title = #{pTitle} ,
			</if>
			<if test="deptNo != null" >
				dept_no = #{deptNo} ,
			</if>
			<if test="pClass != null" >
				p_class = #{pClass} ,
			</if>
			<if test="pImpt != null" >
				p_impt = #{pImpt} ,
			</if>
			<if test="rspbNo != null" >
				rspb_no = #{rspbNo} ,
			</if>
			<if test="pContent != null" >
				p_content = #{pContent} ,
			</if>
			<if test="startDate != null" >
				start_date = to_date(#{startDate}, 'YYYY-MM-DD"T"HH24:mi:ss') ,
			</if>
			<if test="endDate != null" >
				end_date = to_date(#{endDate}, 'YYYY-MM-DD"T"HH24:mi:ss') ,
			</if>
			<if test="latitude != null" >
				latitude = #{latitude} ,
			</if>
			<if test="longitude != null" >
				longitude = #{longitude} ,
			</if>
		</trim>
		where p_no = #{pNo}
	</update>
	
	
	<!-- 일정번호에 해당하는 일정 삭제 -->
	<delete id="deletePlan" parameterType="PlanVO" statementType="PREPARED" >
		delete from plan
		where p_no=#{pNo}
	</delete>
</mapper>


























