<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.bit.groupware.persistent.mapper.employee.EmployeeMapper">
	
	<insert id="insertEmployee" parameterType="EmployeeVO" statementType="PREPARED">			
		<selectKey keyProperty="empNo" resultType="String" statementType="STATEMENT" order="BEFORE">
			select to_char(sysdate,'yyyy')||'-'||lpad(emp_no_seq.nextval,5,0) from dual		
		</selectKey>				
		insert into employee (emp_no, emp_name, emp_pwd,
								 	eng_name, phone_number, email, reg_number, address)
		values (#{empNo}, #{empName}, #{empPwd}, #{engName},
					#{phoneNumber},	#{email}, #{regNumber}, #{address})	
	</insert>
	
	<insert id="insertEmployeeCode" parameterType="map" statementType="PREPARED"> 
		insert all
		<foreach item="empCode" collection="codeList">
		   into employee_code(c_no, emp_no)  values(#{empCode.cNo}, #{empCode.empNo})		
		</foreach>
		select * from dual		
	</insert>
	

	<update id="updateEmployee" parameterType="EmployeeVO" statementType="PREPARED">
		update Employee
		<trim prefix="set" prefixOverrides=",">
			<if test="empName != null">
				, emp_name = #{empName} 
			</if>
			<if test="empPwd != null">
				, emp_pwd = #{empPwd}
			</if>
			<if test="phoneNumber != null">
				, phone_number = #{phoneNumber} 
			</if>
			<if test="email != null">
				, email = #{email}	
			</if>
			<if test="regNumber != 0">
				, reg_number = #{regNumber} 
			</if>
			<if test="hireDate != 0">
				, hire_date = #{hireDate} 
			</if>
			<if test="retireStatus != 0">
				, retire_status = #{retireStatus} 
			</if>
			<if test="retireDate != 0">
				, retire_date = #{retireDate} 
			</if>
			<if test="address != 0">
				, address = #{address} 
			</if>
		</trim>	
		where emp_no = #{empNo}
	</update>
	
	<resultMap id="selectEmployeeResultMap" type="EmployeeVO">
		<id column="emp_no"				 property="empNo" />
		<result column="emp_name" 		 property="empName" />
		<result column="emp_pwd" 	  	 property="empPwd" />
		<result column="eng_name"		 property="engName"/>
		<result column="phone_number" 	 property="phoneNumber" />
		<result column="email" 		 	 property="email" />
		<result column="reg_number"   	 property="regNumber" />
		<result column="hire_date" 	 	 property="hireDate" />
		<result column="retire_status" 	 property="retireStatus" />
		<result column="retire_date" 	 property="retireDate" />
		<result column="address" 		 property="address" />
		<result column="checkAdmin"		 property="checkAdmin"/>
		 <!-- 1:N 관계 -->
		<collection property="codes" javaType="list" ofType="CodeVO">
			<id column="c_no" 				property="cNo"/>
			<result column="c_name"	 		property="cName" />
			<result column="relation_code" 	property="relationCode" />
		</collection>
		
		<collection property="empcodes" javaType="list" ofType="EmployeeCodeVO">
			<id column="c_no" 			property="cNo"/>
			<id column="emp_no" 		property="empNo" />
		</collection>
		
		<collection property="photos" javaType="list" ofType="PhotoVO">
			<id column="photo_no" 				property="photoNo"/>
			<result column="photo_name" 		property="photoName" />
			<result column="system_file_name" 	property="systemFileName" />
			<result column="file_size" 			property="fileSize" />
			<result column="emp_no" 			property="empNo" />
		</collection>
	</resultMap> 

	<select id="selectEmployeeByNo" resultMap="selectEmployeeResultMap" 
							statementType="PREPARED" parameterType="String">
							
		select e.emp_no, emp_name, emp_pwd, eng_name, phone_number, email,
	        reg_number, hire_date, retire_status, retire_date, address, checkAdmin,
	        c.c_no, c_name, relation_code, photo_no, photo_name,system_file_name,file_size,division
		from employee_code ec, employee e, code c, photo ph
		where ec.emp_no = e.emp_no
		    and ec.c_no = c.c_no
	        and e.emp_no = ph.emp_no
	        and e.emp_no = #{empNo}
							
		<!-- select 
			e.emp_no, 
			emp_Name,
			emp_pwd,
			email,
			phone_number,
			hire_date,
			(select c.c_name
             from code c, employee_code ec
             where c.c_no = ec.c_no
                and c.relation_code = (select c_no
                                       from code
                                       where c_name = '부서')
                and ec.emp_no = e.emp_no) as department,
            (select c.c_name
             from code c, employee_code ec
             where c.c_no = ec.c_no
                and c.relation_code = (select c_no
                                       from code
                                       where c_name = '직책')
                and ec.emp_no = e.emp_no) as duty,
            photo_no,
            photo_name,
            system_file_name,
            file_size,
            division
		from employee e , photo ph
        where e.emp_no = ph.emp_no
            and e.emp_no = #{empNo} -->
	</select> 
	
	<!-- <select id="selectEmployeeList" parameterType="map" statementType="STATEMENT" 
													resultMap="selectEmployeeResultMap"> -->
		<!-- select e.emp_no, emp_name, emp_pwd, eng_name, phone_number, email,
		        reg_number, hire_date, retire_status, retire_date, address, checkAdmin,
		        c.c_no, c_name, relation_code
		from employee_code ec, employee e, code c
		where ec.emp_no = e.emp_no
		    and ec.c_no = c.c_no -->
		
		<!-- select 
			emp_no, 
			emp_Name,
			emp_pwd,
			email,
			phone_number,
			hire_date,
			(select c.c_name
             from code c, employee_code ec
             where c.c_no = ec.c_no
                and c.relation_code = (select c_no
                                       from code
                                       where c_name = '부서')
                and ec.emp_no = e.emp_no) as department,
            (select c.c_name
             from code c, employee_code ec
             where c.c_no = ec.c_no
                and c.relation_code = (select c_no
                                       from code
                                       where c_name = '직책')
               	and ec.emp_no = e.emp_no) as duty
		from (select rownum as rn, emp.*
              from (select * from employee
                    order by emp_no asc) emp) e
        <if test="keyfield==emp_no and keyword!=null">
		where emp_no like '%' || #{keyword} || '%' 
		</if>
		<if test="keyfield==emp_name and keyword!=null">
		where emp_name like '%' || #{keyword} || '%'
		</if>
		<if test="keyfield==duty and keyword!=null">
		where duty like '%' || #{keyword} || '%'
		</if>
		<if test="keyfield==department and keyword!=null">
		where department like '%' || #{keyword} || '%'
		</if> 
		<![CDATA[
			where e.rn >= #{startRow} and e.rn <= #{endRow}
		]]> -->
	<select id="selectEmployeeList" parameterType="map" resultType="EmployeeVO" statementType="PREPARED">
		<!-- select 
			emp_no as empNo, 
			emp_name as empName, 
			emp_pwd as empPwd, 
			phone_number as phoneNumber, 
			email, 
			to_char(hire_date, 'yyyy/mm/dd') as hireDate, 
			department, 
			duty
		from (select rownum as rn, emp.*
		      from (select * from empList_view
		      order by emp_no asc) emp) e
		<if test="keyfield == 'empNo' and keyword != null">
		where emp_no like '%' || #{keyword} || '%' 
		</if>
		<if test="keyfield == 'empName' and keyword != null">
		where emp_name like '%' || #{keyword} || '%'
		</if>
		<if test="keyfield == 'duty' and keyword != null">
		where duty like '%' || #{keyword} || '%'
		</if>
		<if test="keyfield == 'department' and keyword != null">
		where department like '%' || #{keyword} || '%'
		</if>
		<if test="keyfield == null">
		where e.rn <![CDATA[>=]]> #{startRow} and e.rn <![CDATA[<=]]> #{endRow}
		</if>
		<if test="keyfield != null">
			and e.rn <![CDATA[>=]]> #{startRow} and e.rn <![CDATA[<=]]> #{endRow}
		</if>
		 -->
		 select 
			empNo, 
			empName, 
			empPwd, 
			phoneNumber, 
			email, 
			hireDate, 
			department, 
			duty
		from (select rownum as rn, emp.*
		      from (select empNo, 
                    empName, 
                    empPwd, 
                    phoneNumber, 
                    email, 
                    hireDate, 
                    department, 
                    duty from empList_view
                    <if test="keyfield == 'empNo' and keyword != null">
					where empNo like '%' || #{keyword} || '%' 
					</if>
					<if test="keyfield == 'empName' and keyword != null">
					where empName like '%' || #{keyword} || '%'
					</if>
					<if test="keyfield == 'duty' and keyword != null">
					where duty like '%' || #{keyword} || '%'
					</if>
					<if test="keyfield == 'department' and keyword != null">
					where department like '%' || #{keyword} || '%'
					</if>
                      order by empNo asc
                    ) emp) e
        where e.rn <![CDATA[>=]]> #{startRow} and e.rn <![CDATA[<=]]> #{endRow}
	</select>
	
	<select id="selectEmployeeByDept" statementType="PREPARED" parameterType="String" resultType="EmployeeVO">
		select emp_no as empNo, duty, emp_name as empName
		from emp_view
		where dept_no = #{cNo}
		order by duty_no asc ,emp_name asc
	</select>
	
	
	
	<select id="selectEmployeeCount" statementType="PREPARED" parameterType="map" resultType="int">
		select count(*)
		from empList_view
		<if test="keyfield == 'empNo' and keyword != null">
		where empNo like '%' || #{keyword} || '%' 
		</if>
		<if test="keyfield == 'empName' and keyword != null">
		where empName like '%' || #{keyword} || '%'
		</if>
		<if test="keyfield == 'duty' and keyword != null">
		where duty like '%' || #{keyword} || '%'
		</if>
		<if test="keyfield == 'department' and keyword != null">
		where department like '%' || #{keyword} || '%'
		</if> 
	</select>
	
	<select id="selectEmpCharge" resultType="String" parameterType="String" statementType="PREPARED">
		select emp_name, phone_number
        from employee e, employee_code ec, code c
        where ec.emp_no = e.emp_no
            and ec.c_no = c.c_no
            and c.c_name = #{cName}
	</select>
	
	<select id="checkDeptEmp" resultType="int" parameterType="String" statementType="PREPARED">
		select count(relation_code)
		from employee_code ec, code c
		where ec.c_no = c.c_no
		    and c.c_name like '%' || #{cName} || '%'
	</select>
	
	<select id="checkRelationDept" resultType="int" parameterType="String" statementType="PREPARED">
		select count(rc.relation_code)
        from code c , code rc
        where c.c_no = rc.relation_code
            and c.c_name = #{cName}
	</select>

</mapper>

