<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bit.groupware.persistent.mapper.authority.AuthorityMapper">

   <resultMap type="RoleVO" id="selectAuthRoleResultMap">
      <id column="r_id" property="rId" />
      <result column="r_name" property="rName" />
      <collection property="authorities" javaType="list" ofType="AuthorityVO">
         <result column="a_name" property="aName" />
      </collection>
   </resultMap>

   <select id="selectAuthority" resultMap="selectAuthRoleResultMap"
      statementType="STATEMENT">
      select t1.r_id, t1.r_name, t3.a_name
      from role t1,
      authority_role t2, authority t3
      where t1.r_id = t2.r_id
      and t2.a_no = t3.a_no
      and t1.r_type = 'url'
      order by t1.sort_order asc
   </select>


   <resultMap type="EmployeeVO" id="selectEmployeeResultMap">
      <result column="emp_no" property="empNo" />
      <result column="emp_name" property="empName" />
      <result column="emp_pwd" property="empPwd" />
      <result column="isAdmin" property="isAdmin" />

      <collection property="codes" javaType="list" ofType="CodeVO">
         <result column="c_no" property="cNo" />
         <result column="c_name" property="cName" />
      </collection>

      <collection property="photos" javaType="list" ofType="PhotoVO">
               <result column="photo_name" property="photoName"/>
               <result column="division" property="division"/>
         </collection>
   </resultMap>


   <select id="selectEmployee" parameterType="String"
      resultMap="selectEmployeeResultMap" statementType="PREPARED">
      select e.emp_no,
      emp_name, emp_pwd, isAdmin,
      c.c_no, c_name, ph.photo_name, ph.division
      from employee_code ec, employee e,
      code c, photo ph
      where ec.emp_no =
      e.emp_no
      and ec.c_no = c.c_no
      and e.emp_no = ph.emp_no
      and e.emp_no =
      #{value}
      order by c.c_no asc
   </select>




   <select id="selectAuthEmp" resultType="string" statementType="PREPARED"
      parameterType="String">
      select t3.a_name as aName
      from authority_employee t1,
      employee t2, authority t3
      where t1.emp_no = t2.emp_no
      and t1.a_no =
      t3.a_no
      and t1.emp_no = #{value}
   </select>
   

   
   
   <!-- 권한등록 -->
   <insert id="insertAuthority" parameterType="AuthorityVO" statementType="PREPARED">
      <selectKey keyProperty="aNo" resultType="String" statementType="STATEMENT" order="BEFORE">
         select to_char('A' || lpad(authority_seq.nextval,'5','0')) from dual
      </selectKey>
      insert into authority(a_no, a_name, a_note, a_whether)
      values(#{aNo}, #{aName} , #{aNote} , #{aWhether})
   </insert>
   
   
   <!-- 권한사원 등록 -->
   <insert id="insertAuthEmp" parameterType="map" statementType="PREPARED">
	   <foreach collection="addList" item="item" open="insert all" close="select * from dual" >
		into authority_employee(emp_no, a_no)
		values(#{item.empNo}, #{item.aNo})
	   </foreach>
   </insert>
      
   <!--권한삭제  -->
   <delete id="deleteAuthority" parameterType="map" statementType="PREPARED">
      delete from authority 
      where a_no in
      <foreach  item="aNo" collection="list" open="(" separator="," close=")">
       #{aNo}
      </foreach>
   </delete>
   
   <!-- 사원,역할 존재여부 -->
   <select id="selectAuthRoleCount" parameterType="map" resultType="int" statementType="PREPARED">
   	select count(*)
	from authority a , role r, authority_role ar, authority_employee ae
	where ar.a_no = a.a_no
    	and r.r_id = ar.r_id
    	and ae.a_no = a.a_no
    	and a.a_no in
    	<foreach item="aNo" collection="list"  open="(" separator="," close=")" >
    	#{aNo}
    	</foreach>
   </select>
   
   
   <!-- 권한 리스트 조회-->
   <select id="selectListAuthority" resultType="AuthorityVO" statementType="PREPARED" parameterType="map" >      
      select a_no as aNo , a_name as aName,a_note as aNote, a_Whether as aWhether
	  from(select tt.*, rownum as rn
			from(select *
    				from authority t1
       <if test="keyfield == 'aName' and keyword != null">
        		  where t1.a_name Like '%' || #{keyword} || '%'
       </if>
       
       <if test="keyfield == 'empNo' and keyword != null">
            	where a_no in (select t1.a_no
                					from authority_employee t1 , employee t2
                					where  t1.emp_no = t2.emp_no
               						and t2.emp_no Like '%' || #{keyword} || '%'
                )
       </if>
       
       
       <if test="keyfield == 'empName' and keyword != null">
	     	  where a_no in (select t1.a_no
	                				from authority_employee t1 , employee t2
	              					where  t1.emp_no = t2.emp_no
	                 				and t2.emp_name Like '%' || #{keyword} || '%'
	                )
       </if>
        order by a_no) tt )
       where rn<![CDATA[>=]]>#{startRow} and rn<![CDATA[<=]]>#{endRow}
   </select>
   
   
 
    
   <select id="selectAuthorityCount" statementType="PREPARED" parameterType="map" resultType="int">
     
     <if test="keyfield == null or keyfield =''">       
			select count(*) from authority
      </if>
     
      <if test="keyfield == 'aName' and keyword != null">          
          select count(*)
          from authority a, employee e, authority_employee ae
          where a.a_no = ae.a_no
          and ae.emp_no = e.emp_no       
          and a.a_name Like '%' || #{keyword} || '%'
       </if>
        
       <if test="keyfield == 'empNo' and keyword != null">
          select count(*)
          from authority a, employee e, authority_employee ae
          where a.a_no = ae.a_no
          and ae.emp_no = e.emp_no      
          and e.emp_no Like '%' || #{keyword} || '%'
       </if>
       
       <if test="keyfield == 'empName' and keyword != null">
          select count(*)
          from authority a, employee e, authority_employee ae
          where a.a_no = ae.a_no
          and ae.emp_no = e.emp_no       
          and e.emp_name Like '%' || #{keyword} || '%'
       </if>
       
   </select>
    
    
  <!-- 권한 수정-->
   <update id="updateAuthority" parameterType="AuthorityVO" statementType="PREPARED" >
      update authority
      <trim prefix="set" suffixOverrides=",">
         <if test="aName != null">
            a_name = #{aName},
         </if>
         <if test="aNote != null">
            a_note = #{aNote},
         </if>
         <if test="aWhether != null">
            a_whether = #{aWhether}
         </if>
      </trim>
      where a_no = #{aNo}
   </update>
   
   <!-- 권한 조회 -->
   <select id="selectAuthorityByaNo"  statementType="PREPARED" parameterType="String" resultType="AuthorityVO">
      select a_no as aNo, a_name as aName, a_note as aNote,a_whether as aWhether
      from authority
      where a_no = #{aNo}
   </select>
   
   <!-- 권한명에  존재여부 -->
   <select id="selectAuthorityByAname" statementType="PREPARED"  resultType="int" parameterType="String">
   		select count(*)
		from authority
		where a_name = #{aName}
   </select>
   
   <!-- 권한번호에 해당하는 사원정보를 사번순으로 오름차순 정렬하여 조회하다 -->   
   <resultMap type="AuthorityVO" id="selectAuthEmpResultMap">
      <id column="aNo" property="aNo"/>
      <result column="aName" property="aName"/>
      
      <!-- 1:N 관계 -->   
      <collection property="emp" javaType="list" ofType="EmployeeVO">
         <result column="empNo" property="empNo"/>
         <result column="empName" property="empName"/>
      </collection>

   </resultMap>
   
   <select id="selectAuthEmpList" statementType="PREPARED" resultMap="selectAuthEmpResultMap" parameterType="String">
      select e.emp_no as empNo, e.emp_name as empName,a.a_name as aName, a.a_no as aNo  
      from authority a , employee e, authority_employee ae
      where a.a_no = ae.a_no
          and ae.emp_no = e.emp_no
          and a.a_no = #{aNo}
       order by e.emp_no asc   
   </select> 
   
   <!-- 권한번호에 해당하는 사원 리스트 조회 -->
   <select id="selectListAuthEmp" resultType="AuthEmpListVO" statementType="PREPARED" parameterType="map" >      
      select empNo , empName, department,duty
	  from (select rownum as rn, emp.* 
     		from (select ae.emp_no as empNo, e.empName, e.department,e.duty
           			from empList_view e , authority_employee ae, authority a
           			where ae.a_no = a.a_no
            				and ae.emp_no = e.empNo
            				and a.a_no = #{aNo}
       <if test="keyfield == 'empNo' and keyword != null">
        		  			and empNo like '%' || #{keyword} || '%' 
       </if>
       
       <if test="keyfield == 'empName' and keyword != null">
            	  			and empName like '%' || #{keyword}  || '%' 
       </if>
        	order by empNo asc ) emp) e 
       where rn<![CDATA[>=]]>#{startRow} and rn<![CDATA[<=]]>#{endRow}
   </select>
   
   <!-- 권한번호에 해당하는 사번 리스트 조회 -->
   <select id="selectListAuthEmpNo" resultType="String" statementType="PREPARED" parameterType="String" >      
      select ae.emp_no as empNo
      from empList_view e , authority_employee ae, authority a
      where ae.a_no = a.a_no
      and ae.emp_no = e.empNo
      and a.a_no = #{aNo}
   </select>
   
    <select id="selectAuthEmpCount" statementType="PREPARED" parameterType="map" resultType="int">
      select count(*)
	  from empList_view e , authority_employee ae, authority a
      where ae.a_no = a.a_no
      	and ae.emp_no = e.empNo
      <if test="keyfield == 'empNo' and keyword != null">
          and e.empNo like '%' || #{keyword} || '%' 
       </if>
       <if test="keyfield == 'empName' and keyword != null">
           and e.empName like '%' || #{keyword}  || '%' 
       </if>
       and a.a_no = #{aNo}
   </select>
   
   <select id="selectAuthEmpCountByaNo" statementType="PREPARED" parameterType="String" resultType="int">
   		select count(ae.ae_no)
		from employee e, authority_employee ae, authority a
		where e.emp_no = ae.emp_no
    	and ae.a_no = a.a_no
    	and a.a_no = #{aNo}
   </select>
   
   <delete id="deleteAutEmp" parameterType="map" statementType="PREPARED">
      delete from authority_employee
	  where ae_no in (
	 <foreach item="item" collection="removeList"  open="(" separator="),(" close=")" >
	  select ae_no from authority_employee
                    		where emp_no = #{item.empNo} and a_no = #{item.aNo} 
  	  </foreach>
  	  )
   </delete>
   
</mapper>